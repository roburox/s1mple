loadstring(game:HttpGet("https://pastebin.com/raw/w39kBLFb",true))()
Player = game.Players.LocalPlayer
Character = Player.Character
Humanoid = Character.Humanoid
RootPart = Character["HumanoidRootPart"]
Torso = Character["Torso"]
Head = Character["Head"]
RightArm = Character["Right Arm"]
LeftArm = Character["Left Arm"]
RightLeg = Character["Right Leg"]
LeftLeg = Character["Left Leg"]
RootJoint = RootPart["RootJoint"]
Neck = Torso["Neck"]
RightShoulder = Torso["Right Shoulder"]
LeftShoulder = Torso["Left Shoulder"]
RightHip = Torso["Right Hip"]
LeftHip = Torso["Left Hip"]
local NB = Neck.C0
local RSB = RightShoulder.C0
local LSB = LeftShoulder.C0
local RHB = RightHip.C0
local LHB = LeftHip.C0
local RJB = RootJoint.C0

function swait(num)
	if num == 0 or num == nil then
		game:service("RunService").Stepped:wait(0)
	else
		for i = 0, num do
			game:service("RunService").Stepped:wait(0)
		end
	end
end

function thread(f)
	coroutine.resume(coroutine.create(f))
end
function clerp(a, b, t)
	local qa = {
		QuaternionFromCFrame(a)
	}
	local qb = {
		QuaternionFromCFrame(b)
	}
	local ax, ay, az = a.x, a.y, a.z
	local bx, by, bz = b.x, b.y, b.z
	local _t = 1 - t
	return QuaternionToCFrame(_t * ax + t * bx, _t * ay + t * by, _t * az + t * bz, QuaternionSlerp(qa, qb, t))
end
function QuaternionFromCFrame(cf)
	local mx, my, mz, m00, m01, m02, m10, m11, m12, m20, m21, m22 = cf:components()
	local trace = m00 + m11 + m22
	if trace > 0 then
		local s = math.sqrt(1 + trace)
		local recip = 0.5 / s
		return (m21 - m12) * recip, (m02 - m20) * recip, (m10 - m01) * recip, s * 0.5
	else
		local i = 0
		if m00 < m11 then
			i = 1
		end
		if m22 > (i == 0 and m00 or m11) then
			i = 2
		end
		if i == 0 then
			local s = math.sqrt(m00 - m11 - m22 + 1)
			local recip = 0.5 / s
			return 0.5 * s, (m10 + m01) * recip, (m20 + m02) * recip, (m21 - m12) * recip
		elseif i == 1 then
			local s = math.sqrt(m11 - m22 - m00 + 1)
			local recip = 0.5 / s
			return (m01 + m10) * recip, 0.5 * s, (m21 + m12) * recip, (m02 - m20) * recip
		elseif i == 2 then
			local s = math.sqrt(m22 - m00 - m11 + 1)
			local recip = 0.5 / s
			return (m02 + m20) * recip, (m12 + m21) * recip, 0.5 * s, (m10 - m01) * recip
		end
	end
end
function QuaternionToCFrame(px, py, pz, x, y, z, w)
	local xs, ys, zs = x + x, y + y, z + z
	local wx, wy, wz = w * xs, w * ys, w * zs
	local xx = x * xs
	local xy = x * ys
	local xz = x * zs
	local yy = y * ys
	local yz = y * zs
	local zz = z * zs
	return CFrame.new(px, py, pz, 1 - (yy + zz), xy - wz, xz + wy, xy + wz, 1 - (xx + zz), yz - wx, xz - wy, yz + wx, 1 - (xx + yy))
end
function QuaternionSlerp(a, b, t)
	local cosTheta = a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]
	local startInterp, finishInterp
	if cosTheta >= 1.0E-4 then
		if 1 - cosTheta > 1.0E-4 then
			local theta = math.acos(cosTheta)
			local invSinTheta = 1 / Sin(theta)
			startInterp = Sin((1 - t) * theta) * invSinTheta
			finishInterp = Sin(t * theta) * invSinTheta
		else
			startInterp = 1 - t
			finishInterp = t
		end
	elseif 1 + cosTheta > 1.0E-4 then
		local theta = math.acos(-cosTheta)
		local invSinTheta = 1 / Sin(theta)
		startInterp = Sin((t - 1) * theta) * invSinTheta
		finishInterp = Sin(t * theta) * invSinTheta
	else
		startInterp = t - 1
		finishInterp = t
	end
	return a[1] * startInterp + b[1] * finishInterp, a[2] * startInterp + b[2] * finishInterp, a[3] * startInterp + b[3] * finishInterp, a[4] * startInterp + b[4] * finishInterp
end
plr = game.Players.LocalPlayer
chara = plr.Character
Create = Instance.new
Huge = math.huge


Player = game.Players.LocalPlayer
PlayerGui = Player.PlayerGui
Cam = workspace.CurrentCamera
Backpack = Player.Backpack
Character = Player.Character
char = Player.Character
Humanoid = Character.Humanoid
RootPart = Character["HumanoidRootPart"]
Torso = Character["Torso"]
Head = Character["Head"]
RightArm = Character["Right Arm"]
LeftArm = Character["Left Arm"]
RightLeg = Character["Right Leg"]
LeftLeg = Character["Left Leg"]
RootJoint = RootPart["RootJoint"]
Neck = Torso["Neck"]
RightShoulder = Torso["Right Shoulder"]
LeftShoulder = Torso["Left Shoulder"]
RightHip = Torso["Right Hip"]
LeftHip = Torso["Left Hip"]

function weld(a, b, acf)
	local w = Instance.new("Weld", a)
	w.Part0 = a
	w.Part1 = b
	w.C0 = acf
end

--------------------------------
local plr = game.Players.LocalPlayer
local char = plr.Character
local hum = char.Humanoid
local hed = char.Head
local root = char.HumanoidRootPart
local rootj1 = root.RootJoint
local tors = char.Torso
local ra = char["Right Arm"]
local la = char["Left Arm"]
local rl = char["Right Leg"]
local ll = char["Left Leg"]
local neck1 = tors["Neck"]
local RootCF = CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14)
local RHCF = CFrame.fromEulerAnglesXYZ(0, 1.6, 0)
local LHCF = CFrame.fromEulerAnglesXYZ(0, -1.6, 0)
local maincolor = BrickColor.new("Maroon")

-------------------------------------------------------
--Start Good Stuff--
-------------------------------------------------------
cam = game.Workspace.CurrentCamera
CF = CFrame.new
angles = CFrame.Angles
attack = false
Euler = CFrame.fromEulerAnglesXYZ
Rad = math.rad
IT = Instance.new
BrickC = BrickColor.new
Cos = math.cos
Acos = math.acos
Sin = math.sin
Asin = math.asin
Abs = math.abs
Mrandom = math.random
Floor = math.floor
-------------------------------------------------------
--End Good Stuff--
-------------------------------------------------------
necko = CF(0, 1, 0, -1, -0, -0, 0, 0, 1, 0, 1, 0)
RSH, LSH = nil, nil 
RHI, LHI = nil, nil 
RJO, NEC = nil, nil 
RW = Instance.new("Weld") 
LW = Instance.new("Weld")
RH = Instance.new("Weld")
LH = Instance.new("Weld")
rootj = Instance.new("Weld")
neck = Instance.new("Weld")
RSH = tors["Right Shoulder"] 
LSH = tors["Left Shoulder"] 
RHI = tors["Right Hip"] 
LHI = tors["Left Hip"] 
RJO = root["RootJoint"] 
NEC = tors["Neck"] 
RSH.Parent = nil 
LSH.Parent = nil 
RHI.Parent = nil 
LHI.Parent = nil 
RW.Name = "Right Shoulder"
RW.Part0 = tors 
RW.C0 = CF(1.5, 0.5, 0)
RW.C1 = CF(0, 0.5, 0) 
RW.Part1 = ra
RW.Parent = tors 
LW.Name = "Left Shoulder"
LW.Part0 = tors 
LW.C0 = CF(-1.5, 0.5, 0)
LW.C1 = CF(0, 0.5, 0) 
LW.Part1 = la
LW.Parent = tors
RH.Name = "Right Hip"
RH.Part0 = tors 
RH.C0 = CF(0.5, -1, 0)
RH.C1 = CF(0, 1, 0) 
RH.Part1 = rl
RH.Parent = tors 
LH.Name = "Left Hip"
LH.Part0 = tors 
LH.C0 = CF(-0.5, -1, 0)
LH.C1 = CF(0, 1, 0) 
LH.Part1 = ll
LH.Parent = tors
neck.Name = "Neck"
neck.Part0 = tors 
neck.C0 = CF(0, 1, 0)
neck.C1 = CF(0, -1/2, 0) 
neck.Part1 = hed
neck.Parent = tors
rootj.Name = "RootJoint"
rootj.Part0 = root
rootj.C0 = CF(0, 0, 0)
rootj.C1 = CF(0, 0, 0) 
rootj.Part1 = tors
rootj.Parent = root
ArtificialHB = Instance.new("BindableEvent", script)
ArtificialHB.Name = "Heartbeat"
script:WaitForChild("Heartbeat")
RSH.Parent = tors
LSH.Parent = tors
RHI.Parent = tors
LHI.Parent = tors
RJO.Parent = root
NEC.Parent = tors

frame = 1 / 60
tf = 0
allowframeloss = false
tossremainder = false


lastframe = tick()
script.Heartbeat:Fire()


game:GetService("RunService").Heartbeat:connect(function(s, p)
	tf = tf + s
	if tf >= frame then
		if allowframeloss then
			script.Heartbeat:Fire()
			lastframe = tick()
		else
			for i = 1, math.floor(tf / frame) do
				script.Heartbeat:Fire()
			end
			lastframe = tick()
		end
		if tossremainder then
			tf = 0
		else
			tf = tf - frame * math.floor(tf / frame)
		end
	end
end)
rootj.Parent = nil
neck.Parent = nil
RW.Parent = nil
LW.Parent = nil
RH.Parent = nil
LH.Parent = nil
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
local equipped = false
local idle = 0
local change = 1
local val = 0
local toim = 0
local idleanim = 0.4
local sine = tick()
local Sit = 1
asd = [[tors.Neck.C0 = clerp(tors.Neck.C0, necko * angles(Rad(-7.5 * Sin(sine / 20)), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 + -0.2 * Cos(sine / 20), -0.2) * RHCF * angles(Rad(-2.25), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 + -0.2 * Cos(sine / 20), 0.075) * LHCF * angles(Rad(-6.5), Rad(0), Rad(0)), 0.15)
		RW.C0 = clerp(RW.C0, CF(0.75, 0.5 + 0.1 * Sin(sine / 20), 0.25) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
		LW.C0 = clerp(LW.C0, CF(-0.75, 0.5 + 0.1 * Sin(sine / 20), 0.25) * angles(Rad(0), Rad(0), Rad(0)), 0.12)]]
----------------------------------------------------------------------------------
hum.WalkSpeed = 16
hum.JumpPower = 45
animat = hum.Animator
----------------------------------------------------------------------------------
player = game.Players.LocalPlayer
torso = player.Character:WaitForChild("Torso")
local dancing = false
function kolorskiddance()
    dancing = true
    rootj.Parent = root
    neck.Parent = tors
    RW.Parent = tors
    LW.Parent = tors
    RH.Parent = tors
    LH.Parent = tors
    for i = 0,2.5,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.75, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.75, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.25) * RHCF * angles(Rad(-45 * Sin(sine / 1)), Rad(20), Rad(25)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.25) * LHCF * angles(Rad(-45 * Sin(sine / 1)), Rad(-20), Rad(-25)), 0.15)
		RW.C0 = clerp(RW.C0, CF(1.5, 0.75, 0) * angles(Rad(2.5 * Sin(sine / 20)), Rad(0), Rad(45 + 2.5 * Sin(sine / 30))), 0.12)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.75, 0) * angles(Rad(2.5 * Sin(sine / 30)), Rad(0), Rad(-45 + 2.5 * Sin(sine / 20))), 0.12)
        swait()
    end
    for i = 0,1.5,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(35)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.75, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.75, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.25) * RHCF * angles(Rad(11.25), Rad(20), Rad(25)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.25) * LHCF * angles(Rad(11.25), Rad(-20), Rad(-25)), 0.15)
		RW.C0 = clerp(RW.C0, CF(1.5, 0.75, 0) * angles(Rad(2.5 * Sin(sine / 20)), Rad(0), Rad(40 + 2.5 * Sin(sine / 30))), 0.12)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.25, -0.35) * angles(Rad(25), Rad(122.25), Rad(65)), 0.12)
        swait()
    end
    for i = 0,2.5,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(-5)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.75, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.75, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.25) * RHCF * angles(Rad(-11.25), Rad(20), Rad(25)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.25) * LHCF * angles(Rad(-11.25), Rad(-20), Rad(-25)), 0.15)
		RW.C0 = clerp(RW.C0, CF(1.5, 0.75, 0) * angles(Rad(2.5 * Sin(sine / 20)), Rad(0), Rad(35 + 2.5 * Sin(sine / 30))), 0.12)
        LW.C0 = clerp(LW.C0, CF(-1, 0.5, -1) * angles(Rad(25), Rad(0), Rad(95)), 0.12)
        swait()
    end
    for i = 0,1.5,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(-5)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.75, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.75, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.25) * RHCF * angles(Rad(11.25), Rad(20), Rad(25)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.25) * LHCF * angles(Rad(11.25), Rad(-20), Rad(-25)), 0.15)
		RW.C0 = clerp(RW.C0, CF(1.5, 0.75, 0) * angles(Rad(-15), Rad(-122.25), Rad(-75)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-0.75, 0.5, -1) * angles(Rad(25), Rad(0), Rad(92.5)), 0.12)
        swait()
    end
    for i = 0,2.5,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(2.5)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.75, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.75, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.25) * RHCF * angles(Rad(-11.25), Rad(20), Rad(25)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.25) * LHCF * angles(Rad(-11.25), Rad(-20), Rad(-25)), 0.15)
		RW.C0 = clerp(RW.C0, CF(0.5, 0.25, -1.1) * angles(Rad(30), Rad(0), Rad(-65.5)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-0.5, 0.5, -1) * angles(Rad(25), Rad(0), Rad(95)), 0.12)
        swait()
    end
    for i = 0,0.5,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.25) * RHCF * angles(Rad(11.25), Rad(0), Rad(0)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.25) * LHCF * angles(Rad(11.25), Rad(0), Rad(0)), 0.15)
		RW.C0 = clerp(RW.C0, CF(0.5, 0.05, -1.1) * angles(Rad(25), Rad(0), Rad(-25.5)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-0.5, 0.35, -1) * angles(Rad(20), Rad(0), Rad(28.5)), 0.12)
        swait()
    end
    for i = 0,1,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180 + 12.5), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180 + -12.5), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1.1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.25) * RHCF * angles(Rad(11.25), Rad(10), Rad(0)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.25) * LHCF * angles(Rad(-11.25), Rad(-25), Rad(0)), 0.15)
		RW.C0 = clerp(RW.C0, CF(0.25, 0.6, -1.1) * angles(Rad(142.5), Rad(0), Rad(-55)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-0.75, 0.8, -1) * angles(Rad(132.5), Rad(0), Rad(5)), 0.12)
        swait()
    end
    for i = 0,0.5,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.25) * RHCF * angles(Rad(11.25), Rad(0), Rad(0)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.25) * LHCF * angles(Rad(11.25), Rad(0), Rad(0)), 0.15)
		RW.C0 = clerp(RW.C0, CF(0.5, 0.35, -1.1) * angles(Rad(25), Rad(0), Rad(-28.5)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-0.5, 0.05, -1) * angles(Rad(20), Rad(0), Rad(25.5)), 0.12)
        swait()
    end
    for i = 0,1,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180 + -12.5), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180 + 12.5), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1.1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.25) * RHCF * angles(Rad(-11.25), Rad(10), Rad(0)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.25) * LHCF * angles(Rad(11.25), Rad(-25), Rad(0)), 0.15)
		RW.C0 = clerp(RW.C0, CF(0.75, 0.5, -1.1) * angles(Rad(122.5), Rad(0), Rad(-5)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-0.25, 0.7, -1) * angles(Rad(112.5), Rad(0), Rad(45)), 0.12)
        swait()
    end
    for i = 0,0.5,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.25) * RHCF * angles(Rad(11.25), Rad(0), Rad(0)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.25) * LHCF * angles(Rad(11.25), Rad(0), Rad(0)), 0.15)
		RW.C0 = clerp(RW.C0, CF(0.5, 0.05, -1.1) * angles(Rad(25), Rad(0), Rad(-25.5)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-0.5, 0.35, -1) * angles(Rad(20), Rad(0), Rad(28.5)), 0.12)
        swait()
    end
    for i = 0,1,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180 + 12.5), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180 + -12.5), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1.1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.25) * RHCF * angles(Rad(11.25), Rad(10), Rad(0)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.25) * LHCF * angles(Rad(-11.25), Rad(-25), Rad(0)), 0.15)
		RW.C0 = clerp(RW.C0, CF(0.25, 0.6, -1.1) * angles(Rad(142.5), Rad(0), Rad(-55)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-0.75, 0.8, -1) * angles(Rad(132.5), Rad(0), Rad(5)), 0.12)
        swait()
    end
    for i = 0,3.625,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180 + 12.5 * Sin(sine / 10)), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180 + -12.5 * Sin(sine / 10)), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1.1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.25) * RHCF * angles(Rad(11.25 * Sin(sine / 10)), Rad(10), Rad(0)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.25) * LHCF * angles(Rad(-11.25 * Sin(sine / 10)), Rad(-25), Rad(0)), 0.15)
		RW.C0 = clerp(RW.C0, CF(0.25 + 0.75 * Cos(sine / 5), 0.6 + -0.75 * Sin(sine / 5), -1.1) * angles(Rad(142.5), Rad(0), Rad(-55)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-0.75 + 0.75 * Cos(sine / 5), 0.8 + -0.75 * Sin(sine / 5), -1) * angles(Rad(132.5), Rad(0), Rad(5)), 0.12)
        swait()
    end
    for i = 0,0.5,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1.1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.25) * RHCF * angles(Rad(5.625), Rad(0), Rad(0)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.25) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
		RW.C0 = clerp(RW.C0, CF(0.5, 0.05, -1.1) * angles(Rad(25), Rad(0), Rad(-25.5)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-0.5, 0.05, -1) * angles(Rad(20), Rad(0), Rad(25.5)), 0.12)
        swait()
    end
    for i = 0,2,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1.1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.5) * RHCF * angles(Rad(11.25), Rad(20), Rad(25)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.5) * LHCF * angles(Rad(11.25), Rad(-20), Rad(-25)), 0.15)
		RW.C0 = clerp(RW.C0, CF(0.5, 0.65, -1.1) * angles(Rad(125), Rad(0), Rad(-25.5)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-0.5, 0.65, -1) * angles(Rad(120), Rad(0), Rad(25.5)), 0.12)
        swait()
    end
    for i = 0,1,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90+25), Rad(180+35), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90+-25), Rad(180+55), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1.3, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.5) * RHCF * angles(Rad(20), Rad(30), Rad(-25)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.5) * LHCF * angles(Rad(-20), Rad(-30), Rad(25)), 0.15)
		RW.C0 = clerp(RW.C0, CF(1.5, 0.5, 0) * angles(Rad(0), Rad(0), Rad(65)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1, 0) * angles(Rad(120), Rad(0), Rad(25)), 0.12)
        swait()
    end
    for i = 0,1,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90+15), Rad(180+-25), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90+-15), Rad(180+25), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1.2, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.75, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.5) * RHCF * angles(Rad(15), Rad(25), Rad(-15)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0) * LHCF * angles(Rad(15), Rad(-50), Rad(15)), 0.15)
		RW.C0 = clerp(RW.C0, CF(1.5, 0.5, 0) * angles(Rad(120), Rad(0), Rad(0)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5, 0) * angles(Rad(0), Rad(180), Rad(55)), 0.12)
        swait()
    end
    for i = 0,1,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.75) * RHCF * angles(Rad(15), Rad(10), Rad(10)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.75) * LHCF * angles(Rad(10), Rad(-15), Rad(-10)), 0.15)
		RW.C0 = clerp(RW.C0, CF(1.5, 0.25, 0) * angles(Rad(110), Rad(-25), Rad(-40)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.25, 0) * angles(Rad(105), Rad(20), Rad(45)), 0.12)
        swait()
    end
    for i = 0,1,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, -0.5 + 0.5 * Cos(sine / 5)) * angles(Rad(90), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -0.6 - 0.5 * Cos(sine / 5), 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.5, -0.6 - 0.5 * Cos(sine / 5), 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.5) * RHCF * angles(Rad(11.25), Rad(25), Rad(25)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.5) * LHCF * angles(Rad(11.25), Rad(-25), Rad(-20)), 0.15)
		RW.C0 = clerp(RW.C0, CF(1.5, 0.5, 0) * angles(Rad(0), Rad(0), Rad(90 - 30 * Cos(sine / 5))), 0.12)
        LW.C0 = clerp(LW.C0, CF(-1, 0.5, -0.5) * angles(Rad(0), Rad(0), Rad(85 - 30 * Cos(sine / 5))), 0.12)
        swait()
    end
    for i = 0,2.5,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, -0.5) * angles(Rad(90+25), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90+-25), Rad(180), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.75, -0.5, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.75, -0.5, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.5) * RHCF * angles(Rad(0), Rad(25), Rad(-25)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.5) * LHCF * angles(Rad(0), Rad(-25), Rad(25)), 0.15)
		RW.C0 = clerp(RW.C0, CF(0.75, 0.5, -1) * angles(Rad(170), Rad(35), Rad(-90)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-1, 0.5, -0.5) * angles(Rad(40), Rad(15), Rad(25)), 0.12)
        swait()
    end
    for i = 0,2.5,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, -0.5 + 0.5 * Cos(sine / 5.5)) * angles(Rad(90), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -0.5 - 0.5 * Cos(sine / 5.5), 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.5, -0.5 - 0.5 * Cos(sine / 5.5), 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.5) * RHCF * angles(Rad(0), Rad(0), Rad(11.25 + -11.25 * Cos(sine / 5.5))), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.5) * LHCF * angles(Rad(0), Rad(0), Rad(-11.25 + 11.25 * Cos(sine / 5.5))), 0.15)
		RW.C0 = clerp(RW.C0, CF(0.75, 0.5, -1) * angles(Rad(0), Rad(60 * Cos(sine / 2.5)), Rad(-90 + 60 * Sin(sine / 2.5))), 0.12)
        LW.C0 = clerp(LW.C0, CF(-0.75, 0.5, -1) * angles(Rad(0), Rad(60 * Cos(sine / 2.5)), Rad(85 + 60 * Sin(sine / 2.5))), 0.12)
        swait()
    end
    for i = 0,1,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90+-10), Rad(180), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.5) * RHCF * angles(Rad(0), Rad(20), Rad(0)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.5) * LHCF * angles(Rad(0), Rad(-20), Rad(0)), 0.15)
		RW.C0 = clerp(RW.C0, CF(0.75, 0.25, -1) * angles(Rad(30), Rad(-90), Rad(0)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5, 0) * angles(Rad(205), Rad(0), Rad(-25)), 0.12)
        swait()
    end
    for i = 0,1,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180), Rad(0)), 0.3)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.5) * RHCF * angles(Rad(0), Rad(20), Rad(0)), 0.3)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.5) * LHCF * angles(Rad(0), Rad(-20), Rad(0)), 0.3)
		RW.C0 = clerp(RW.C0, CF(0.75, 0.15, -0.75) * angles(Rad(70), Rad(-55), Rad(-25)), 0.24)
        LW.C0 = clerp(LW.C0, CF(-0.75, 0.35, -0.75) * angles(Rad(45), Rad(-125), Rad(-45)), 0.24)
        swait()
    end
    for i = 0,1,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180), Rad(-15)), 0.3)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(15)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -0.85, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1.25, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.5) * RHCF * angles(Rad(15), Rad(25), Rad(0)), 0.3)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.5) * LHCF * angles(Rad(-15), Rad(-25), Rad(0)), 0.3)
		RW.C0 = clerp(RW.C0, CF(1.5, 0.5, 0) * angles(Rad(0), Rad(0), Rad(75)), 0.24)
        LW.C0 = clerp(LW.C0, CF(-1.25, 0.5, -0.5) * angles(Rad(175), Rad(-90), Rad(25)), 0.24)
        swait()
    end
    for i = 0,1.5,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180+-15), Rad(-15)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180+15), Rad(15)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -0.85, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1.25, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.5) * RHCF * angles(Rad(15), Rad(40), Rad(0)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.5) * LHCF * angles(Rad(-15), Rad(-40), Rad(0)), 0.15)
		RW.C0 = clerp(RW.C0, CF(1.5, 0.6, 0) * angles(Rad(0), Rad(0), Rad(100)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-0.75, 0.15, -0.5) * angles(Rad(0), Rad(0), Rad(35)), 0.12)
        swait()
    end
    for i = 0,4,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, -0.35) * angles(Rad(90+15), Rad(180), Rad(0)), 0.075)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90+-5), Rad(180+15), Rad(25)), 0.15)
        RH.C0 = clerp(RH.C0, CF(0.65, -0.65, 0) * RHCF * angles(Rad(2.5), Rad(0), Rad(0)), 0.075)
        LH.C0 = clerp(LH.C0, CF(-0.65, -0.65, 0) * LHCF * angles(Rad(2.5), Rad(0), Rad(0)), 0.075)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.5) * RHCF * angles(Rad(0), Rad(25), Rad(-15)), 0.075)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.5) * LHCF * angles(Rad(0), Rad(-25), Rad(15)), 0.075)
		RW.C0 = clerp(RW.C0, CF(1.5, 1, -0.5) * angles(Rad(250), Rad(-55), Rad(110)), 0.06)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5, 0) * angles(Rad(0), Rad(167.5), Rad(60)), 0.06)
        swait()
    end
    for i = 0,1,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, -0.7) * angles(Rad(90+55), Rad(180+5), Rad(15)), 0.3)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180+-5), Rad(15)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(55)), 0.3)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(-55)), 0.3)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.5) * RHCF * angles(Rad(-5), Rad(40), Rad(0)), 0.3)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.5) * LHCF * angles(Rad(5), Rad(-40), Rad(0)), 0.3)
		RW.C0 = clerp(RW.C0, CF(1.5, 0.5, 0) * angles(Rad(55+75), Rad(10), Rad(-65)), 0.24)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5, 0) * angles(Rad(55+25), Rad(-35), Rad(-25)), 0.24)
        swait()
    end
    for i = 0,0.5,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, -0.55) * angles(Rad(90+45), Rad(180+5), Rad(7.5)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90+-45), Rad(180+-5), Rad(7.5)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(55)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(-55)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.5) * RHCF * angles(Rad(-5), Rad(40), Rad(0)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.5) * LHCF * angles(Rad(5), Rad(-40), Rad(0)), 0.15)
		RW.C0 = clerp(RW.C0, CF(0.5, 0.15, -0.75) * angles(Rad(45), Rad(0), Rad(-82.5)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5, 0) * angles(Rad(45), Rad(0), Rad(-75)), 0.12)
        swait()
    end
    for i = 0,1,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, -0.55) * angles(Rad(90+50), Rad(180+5), Rad(7.5)), 0.45)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90+-35), Rad(180+-5), Rad(7.5)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(50)), 0.45)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(-50)), 0.45)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.5) * RHCF * angles(Rad(-5), Rad(40), Rad(0)), 0.45)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.5) * LHCF * angles(Rad(5), Rad(-40), Rad(0)), 0.45)
		RW.C0 = clerp(RW.C0, CF(0.75, 0.35, -0.5) * angles(Rad(50), Rad(0), Rad(-47.5)), 0.36)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5, 0) * angles(Rad(50), Rad(0), Rad(-65)), 0.36)
        swait()
    end
    for i = 0,0.5,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, -0.55) * angles(Rad(90+45), Rad(180+5), Rad(7.5)), 0.45)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90+-45), Rad(180+-5), Rad(7.5)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(55)), 0.45)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(-55)), 0.45)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.5) * RHCF * angles(Rad(-5), Rad(40), Rad(0)), 0.45)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.5) * LHCF * angles(Rad(5), Rad(-40), Rad(0)), 0.45)
		RW.C0 = clerp(RW.C0, CF(0.5, 0.15, -0.75) * angles(Rad(45), Rad(0), Rad(-82.5)), 0.36)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5, 0) * angles(Rad(45), Rad(0), Rad(-75)), 0.36)
        swait()
    end
    for i = 0,2.5,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90+15), Rad(180+-5), Rad(-7.5)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180+5), Rad(7.5)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(15)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1.1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(-15)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0.5) * RHCF * angles(Rad(5+10), Rad(0), Rad(0)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0.5) * LHCF * angles(Rad(-5+-5), Rad(-15), Rad(0)), 0.15)
		RW.C0 = clerp(RW.C0, CF(1.5, 0.85, 0) * angles(Rad(15), Rad(0), Rad(55)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.6, 0) * angles(Rad(15), Rad(0), Rad(-110)), 0.12)
        swait()
    end
    for i = 0,4.5,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, -0.5 + 0.5 * Cos(sine / 2.5)) * angles(Rad(90), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.75, -0.5 - 0.5 * Cos(sine / 2.5), 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.75, -0.5 - 0.5 * Cos(sine / 2.5), 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0) * RHCF * angles(Rad(-7.5 + 15 * Cos(sine / 2.5)), Rad(25), Rad(0)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0) * LHCF * angles(Rad(-7.5 + 15 * Cos(sine / 2.5)), Rad(-25), Rad(0)), 0.15)
		RW.C0 = clerp(RW.C0, CF(0.75, 0.25, -1) * angles(Rad(0), Rad(15 * Cos(sine / 2.5)), Rad(-105 + 70 * -Sin(sine / 2.5))), 0.12)
        LW.C0 = clerp(LW.C0, CF(-0.75, 0.25, -1) * angles(Rad(0), Rad(22.5 * Sin(sine / 2.5)), Rad(105 + 70 * Sin(sine / 2.5))), 0.12)
        swait()
    end
    for i = 0,4,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0.5 * Cos(sine / 2.5), 0, 0.5 * Sin(sine / 2.5)) * angles(Rad(90), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.75 - -0.5 * Cos(sine / 2.5), -1 + -0.5 * Sin(sine / 2.5), 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.75 - -0.5 * Cos(sine / 2.5), -1 + -0.5 * Sin(sine / 2.5), 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0) * RHCF * angles(Rad(15 * Cos(sine / 2.5)), Rad(25), Rad(15 * Sin(sine / 2.5))), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0) * LHCF * angles(Rad(-15 * Cos(sine / 2.5)), Rad(-25), Rad(-15 * Sin(sine / 2.5))), 0.15)
		RW.C0 = clerp(RW.C0, CF(1.5, 0.5, 0) * angles(Rad(175), Rad(-5), Rad(0)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5, 0) * angles(Rad(175), Rad(2.5), Rad(0)), 0.12)
        swait()
    end
    for i = 0,4,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0.5 * Cos(sine / 2.5), 0, 0.5 * Sin(sine / 2.5)) * angles(Rad(90), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.75 + 0.5 * Cos(sine / 2.5), -1 + -0.5 * Sin(sine / 2.5), 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.75 + 0.5 * Cos(sine / 2.5), -1 + -0.5 * Sin(sine / 2.5), 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0) * RHCF * angles(Rad(0), Rad(25), Rad(0)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0) * LHCF * angles(Rad(0), Rad(-25), Rad(0)), 0.15)
		RW.C0 = clerp(RW.C0, CF(0.5 + 0.5 * Cos(sine / 2.5), 0.25 + 0.75 * Sin(sine / 2.5), -1 + 0.5 * Sin(sine / 2.5)) * angles(Rad(0), Rad(0), Rad(-45 + -45 * Sin(sine / 2.5))), 0.12)
        LW.C0 = clerp(LW.C0, CF(-0.5 + 0.5 * Cos(sine / 2.5), 0.25 + 0.75 * Sin(sine / 2.5), -1 + 0.5 * Sin(sine / 2.5)) * angles(Rad(0), Rad(0), Rad(45 + 45 * Sin(sine / 2.5))), 0.12)
        swait()
    end
    for i = 0,0.5,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, -0.25) * angles(Rad(90+10), Rad(180+40), Rad(0)), 0.3)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.65, -0.75, -0.5) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        LH.C0 = clerp(LH.C0, CF(-0.65, -0.85, -0.5) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0) * RHCF * angles(Rad(10), Rad(25), Rad(-10+12.5)), 0.3)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0) * LHCF * angles(Rad(-10), Rad(-25), Rad(10+-12.5)), 0.3)
		RW.C0 = clerp(RW.C0, CF(1, 0.5, -0.5) * angles(Rad(15), Rad(-35), Rad(-25)), 0.24)
        LW.C0 = clerp(LW.C0, CF(-1, 0.5, -0.5) * angles(Rad(15), Rad(35), Rad(25)), 0.24)
        swait()
    end
    for i = 0,2,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0.15) * angles(Rad(90+5), Rad(180+35), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.65, -1.15, -0.5) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.65, -1.25, -0.5) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0) * RHCF * angles(Rad(5), Rad(25), Rad(-5+35)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0) * LHCF * angles(Rad(-5), Rad(-25), Rad(5+-35)), 0.15)
		RW.C0 = clerp(RW.C0, CF(1.5, 0.85, -0.5) * angles(Rad(135), Rad(35), Rad(25)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.85, -0.5) * angles(Rad(135), Rad(-35), Rad(-25)), 0.12)
        swait()
    end
    for i = 0,0.5,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90+2.5), Rad(180+20), Rad(0)), 0.3)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.65, -1, -0.5) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        LH.C0 = clerp(LH.C0, CF(-0.65, -1.1, -0.5) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0) * RHCF * angles(Rad(2.5), Rad(25), Rad(-2.5+20)), 0.3)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0) * LHCF * angles(Rad(-2.5), Rad(-25), Rad(2.5+-20)), 0.3)
		RW.C0 = clerp(RW.C0, CF(1.5, 0.75, -0.25) * angles(Rad(0), Rad(-25), Rad(60)), 0.24)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.75, -0.25) * angles(Rad(0), Rad(20), Rad(-55)), 0.24)
        swait()
    end
    for i = 0,2,0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180), Rad(0)), 0.15)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(-7.5)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0) * RHCF * angles(Rad(7.5), Rad(0), Rad(0)), 0.15)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0) * LHCF * angles(Rad(7.5), Rad(0), Rad(0)), 0.15)
		RW.C0 = clerp(RW.C0, CF(1.5, 0.5, 0) * angles(Rad(0), Rad(-145), Rad(-20)), 0.12)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5, 0) * angles(Rad(0), Rad(135), Rad(35)), 0.12)
        swait()
    end
    for i = 0, 1, 0.4 do
        rootj.C0 = clerp(rootj.C0, RootCF * CF(0, 0, 0) * angles(Rad(90), Rad(180), Rad(0)), 0.3)
        neck.C0 = clerp(neck.C0, necko * angles(Rad(90), Rad(180), Rad(0)), 0.6)
        RH.C0 = clerp(RH.C0, CF(0.5, -1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        LH.C0 = clerp(LH.C0, CF(-0.5, -1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C1 = clerp(RH.C1, CF(0, 1, 0) * RHCF * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        LH.C1 = clerp(LH.C1, CF(0, 1, 0) * LHCF * angles(Rad(0), Rad(0), Rad(0)), 0.3)
		RW.C0 = clerp(RW.C0, CF(1.5, 0.5, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.24)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.24)
        swait()
    end
    rootj.Parent = nil
    neck.Parent = nil
    RW.Parent = nil
    LW.Parent = nil
    RH.Parent = nil
    LH.Parent = nil
    dancing = false
end
kolors = Instance.new('Sound',torso)
kolors.SoundId = "rbxassetid://586968170"
kolors.Looped = true
kolors.Playing = true

spawn(function()
    while true do
        swait()
        if not dancing then
			kolorskiddance()
		end
    end
end)
spawn(function()
    while true do
        swait()
        sine = sine+change
        change = 1
    end
end) -- https://glot.io/snippets/foykvbv04m/raws
